// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: exam.proto

package exampb

import (
	_ "github.com/0x00b/gobbq/proto/bbq"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum int32

const (
	Enum_XXX  Enum = 0
	Enum_XXX2 Enum = 1
)

// Enum value maps for Enum.
var (
	Enum_name = map[int32]string{
		0: "XXX",
		1: "XXX2",
	}
	Enum_value = map[string]int32{
		"XXX":  0,
		"XXX2": 1,
	}
)

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}

func (x Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_proto_enumTypes[0].Descriptor()
}

func (Enum) Type() protoreflect.EnumType {
	return &file_exam_proto_enumTypes[0]
}

func (x Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum.Descriptor instead.
func (Enum) EnumDescriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{0}
}

type SayHelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty" bson:"text"`
	CLientID uint64 `protobuf:"varint,2,opt,name=CLientID,proto3" json:"CLientID,omitempty" bson:"CLientID"`
}

func (x *SayHelloRequest) Reset() {
	*x = SayHelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayHelloRequest) ProtoMessage() {}

func (x *SayHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayHelloRequest.ProtoReflect.Descriptor instead.
func (*SayHelloRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{0}
}

func (x *SayHelloRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SayHelloRequest) GetCLientID() uint64 {
	if x != nil {
		return x.CLientID
	}
	return 0
}

type SayHelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty" bson:"text"`
}

func (x *SayHelloResponse) Reset() {
	*x = SayHelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayHelloResponse) ProtoMessage() {}

func (x *SayHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayHelloResponse.ProtoReflect.Descriptor instead.
func (*SayHelloResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{1}
}

func (x *SayHelloResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type EchoProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string           `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty" bson:"_id"`
	Test  *SayHelloRequest `protobuf:"bytes,2,opt,name=test,proto3" json:"test,omitempty" bson:"test"`
	Test2 []*empty.Empty   `protobuf:"bytes,3,rep,name=test2,proto3" json:"test2,omitempty" bson:"test2"` //先不支持import类型
	Test3 map[int32]string `protobuf:"bytes,4,rep,name=test3,proto3" json:"test3,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"test3"`
	Test4 []byte           `protobuf:"bytes,5,opt,name=test4,proto3" json:"test4,omitempty" bson:"test4"`
	Test5 int64            `protobuf:"fixed64,6,opt,name=test5,proto3" json:"test5,omitempty" bson:"test5"`
	Test6 int32            `protobuf:"fixed32,7,opt,name=test6,proto3" json:"test6,omitempty" bson:"test6"`
	TEST7 Enum             `protobuf:"varint,8,opt,name=TEST7,proto3,enum=exampb.Enum" json:"TEST7,omitempty" bson:"TEST7"`
	Test8 int32            `protobuf:"zigzag32,9,opt,name=test8,proto3" json:"test8,omitempty" bson:"test8"`
	Test9 []int32          `protobuf:"zigzag32,10,rep,packed,name=test9,proto3" json:"test9,omitempty" bson:"test9"`
}

func (x *EchoProperty) Reset() {
	*x = EchoProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoProperty) ProtoMessage() {}

func (x *EchoProperty) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoProperty.ProtoReflect.Descriptor instead.
func (*EchoProperty) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{2}
}

func (x *EchoProperty) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EchoProperty) GetTest() *SayHelloRequest {
	if x != nil {
		return x.Test
	}
	return nil
}

func (x *EchoProperty) GetTest2() []*empty.Empty {
	if x != nil {
		return x.Test2
	}
	return nil
}

func (x *EchoProperty) GetTest3() map[int32]string {
	if x != nil {
		return x.Test3
	}
	return nil
}

func (x *EchoProperty) GetTest4() []byte {
	if x != nil {
		return x.Test4
	}
	return nil
}

func (x *EchoProperty) GetTest5() int64 {
	if x != nil {
		return x.Test5
	}
	return 0
}

func (x *EchoProperty) GetTest6() int32 {
	if x != nil {
		return x.Test6
	}
	return 0
}

func (x *EchoProperty) GetTEST7() Enum {
	if x != nil {
		return x.TEST7
	}
	return Enum_XXX
}

func (x *EchoProperty) GetTest8() int32 {
	if x != nil {
		return x.Test8
	}
	return 0
}

func (x *EchoProperty) GetTest9() []int32 {
	if x != nil {
		return x.Test9
	}
	return nil
}

var File_exam_proto protoreflect.FileDescriptor

var file_exam_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x78, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x62, 0x1a, 0x09, 0x62, 0x62, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0f,
	0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x4c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x43, 0x4c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x26, 0x0a, 0x10, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x8c, 0x03, 0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe2, 0x44, 0x07, 0x0a, 0x03, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e,
	0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x32, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x05, 0x74, 0x65,
	0x73, 0x74, 0x32, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x33, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x63, 0x68, 0x6f,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x33, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65,
	0x73, 0x74, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x34,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x05, 0x74, 0x65, 0x73, 0x74, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x36, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x36, 0x12, 0x22, 0x0a, 0x05,
	0x54, 0x45, 0x53, 0x54, 0x37, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x54, 0x45, 0x53, 0x54, 0x37,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x05, 0x74, 0x65, 0x73, 0x74, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x39, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x11, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x39, 0x1a, 0x38, 0x0a, 0x0a,
	0x54, 0x65, 0x73, 0x74, 0x33, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x19, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x07,
	0x0a, 0x03, 0x58, 0x58, 0x58, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x58, 0x58, 0x32, 0x10,
	0x01, 0x32, 0x4d, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x61, 0x79,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53,
	0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x04, 0xa0, 0xbb, 0x18, 0x01,
	0x32, 0x50, 0x0a, 0x07, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x08, 0x53,
	0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62,
	0x2e, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x04, 0xa0, 0xbb,
	0x18, 0x00, 0x32, 0x51, 0x0a, 0x08, 0x45, 0x63, 0x68, 0x6f, 0x53, 0x76, 0x63, 0x32, 0x12, 0x3f,
	0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a,
	0x04, 0xa0, 0xbb, 0x18, 0x01, 0x32, 0x4f, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x3f, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61,
	0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x1a, 0x04, 0xa0, 0xbb, 0x18, 0x00, 0x32, 0x4d, 0x0a, 0x06, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x1a,
	0x04, 0xa0, 0xbb, 0x18, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x30, 0x78, 0x30, 0x30, 0x62, 0x2f, 0x67, 0x6f, 0x62, 0x62, 0x71, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x62, 0x3b, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exam_proto_rawDescOnce sync.Once
	file_exam_proto_rawDescData = file_exam_proto_rawDesc
)

func file_exam_proto_rawDescGZIP() []byte {
	file_exam_proto_rawDescOnce.Do(func() {
		file_exam_proto_rawDescData = protoimpl.X.CompressGZIP(file_exam_proto_rawDescData)
	})
	return file_exam_proto_rawDescData
}

var file_exam_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_exam_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_exam_proto_goTypes = []interface{}{
	(Enum)(0),                // 0: exampb.Enum
	(*SayHelloRequest)(nil),  // 1: exampb.SayHelloRequest
	(*SayHelloResponse)(nil), // 2: exampb.SayHelloResponse
	(*EchoProperty)(nil),     // 3: exampb.EchoProperty
	nil,                      // 4: exampb.EchoProperty.Test3Entry
	(*empty.Empty)(nil),      // 5: google.protobuf.Empty
}
var file_exam_proto_depIdxs = []int32{
	1, // 0: exampb.EchoProperty.test:type_name -> exampb.SayHelloRequest
	5, // 1: exampb.EchoProperty.test2:type_name -> google.protobuf.Empty
	4, // 2: exampb.EchoProperty.test3:type_name -> exampb.EchoProperty.Test3Entry
	0, // 3: exampb.EchoProperty.TEST7:type_name -> exampb.Enum
	1, // 4: exampb.Echo.SayHello:input_type -> exampb.SayHelloRequest
	1, // 5: exampb.EchoEty.SayHello:input_type -> exampb.SayHelloRequest
	1, // 6: exampb.EchoSvc2.SayHello:input_type -> exampb.SayHelloRequest
	1, // 7: exampb.Client.SayHello:input_type -> exampb.SayHelloRequest
	1, // 8: exampb.NoResp.SayHello:input_type -> exampb.SayHelloRequest
	2, // 9: exampb.Echo.SayHello:output_type -> exampb.SayHelloResponse
	2, // 10: exampb.EchoEty.SayHello:output_type -> exampb.SayHelloResponse
	2, // 11: exampb.EchoSvc2.SayHello:output_type -> exampb.SayHelloResponse
	2, // 12: exampb.Client.SayHello:output_type -> exampb.SayHelloResponse
	5, // 13: exampb.NoResp.SayHello:output_type -> google.protobuf.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_exam_proto_init() }
func file_exam_proto_init() {
	if File_exam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayHelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayHelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exam_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_exam_proto_goTypes,
		DependencyIndexes: file_exam_proto_depIdxs,
		EnumInfos:         file_exam_proto_enumTypes,
		MessageInfos:      file_exam_proto_msgTypes,
	}.Build()
	File_exam_proto = out.File
	file_exam_proto_rawDesc = nil
	file_exam_proto_goTypes = nil
	file_exam_proto_depIdxs = nil
}
